export default function UpcomingWebinars() {
  const webinars = [
    {
      date: "25 –í–µ—Ä–µ—Å–Ω—è",
      title: "–ï—Ñ–µ–∫—Ç–∏–≤–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ Rozetka: –Ω–æ–≤—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó",
      description: "–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–∫–ª–∞–º–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —Ç–∞ —è–∫ —ó—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –ø—Ä–æ–¥–∞–∂—ñ–≤.",
      icon: "üéØ",
      status: "live",
      statusText: "LIVE"
    },
    {
      date: "30 –í–µ—Ä–µ—Å–Ω—è",
      title: "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –æ—Å—ñ–Ω–Ω—å–æ-–∑–∏–º–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω—É: —Ç—Ä–µ–Ω–¥–∏ —Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó",
      description: "–Ø–∫ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ –≤–∞—à –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –¥–æ –Ω–∞–π–∞–∫—Ç–∏–≤–Ω—ñ—à–æ–≥–æ per√≠–æ–¥—É —Ä–æ–∫—É —Ç–∞ –º–∞–∫—Å–∏–º—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–∏–±—É—Ç–æ–∫.",
      icon: "üçÇ",
      status: "upcoming",
      statusText: ""
    },
    {
      date: "20 –í–µ—Ä–µ—Å–Ω—è",
      title: "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂—ñ–≤: —è–∫ —á–∏—Ç–∞—Ç–∏ –∑–≤—ñ—Ç–∏ —Ç–∞ –ø—Ä–∏–π–º–∞—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è",
      description: "–ù–∞–≤—á—ñ—Ç—å—Å—è –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø—Ä–æ–¥–∞–∂—ñ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ó—Ö –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –±—ñ–∑–Ω–µ—Å—É.",
      icon: "üìä",
      status: "recorded",
      statusText: "–ó–∞–ø–∏—Å"
    }
  ];

  const getButtonContent = (webinar: any) => {
    switch (webinar.status) {
      case "live":
        return { text: "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –µ—Ñ—ñ—Ä—É", color: "bg-red-500 hover:bg-red-600" };
      case "recorded":
        return { text: "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–ø–∏—Å", color: "bg-gray-500 hover:bg-gray-600" };
      default:
        return { text: "–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è", color: "bg-secondary text-secondary-foreground border border-border hover:bg-accent" };
    }
  };

  return (
    <section>
      <h2 className="text-xl font-semibold text-foreground mb-4">–ù–∞–π–±–ª–∏–∂—á—ñ –≤–µ–±—ñ–Ω–∞—Ä–∏</h2>
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-4">
        {webinars.map((webinar, index) => {
          const buttonContent = getButtonContent(webinar);
          return (
            <div 
              key={index}
              className="bg-white rounded-lg border border-border p-6 card-hover"
              data-testid={`webinar-${index}`}
            >
              <div className="flex items-start justify-between mb-4">
                <div className="flex-1">
                  <div className="flex items-center space-x-2 mb-1">
                    <div className="text-sm text-primary font-medium">{webinar.date}</div>
                    {webinar.statusText && (
                      <span className={`text-xs px-2 py-1 rounded-full font-medium ${
                        webinar.status === "live" 
                          ? "bg-red-100 text-red-600" 
                          : "bg-gray-100 text-gray-600"
                      }`}>
                        {webinar.statusText}
                      </span>
                    )}
                  </div>
                  <h3 className="font-medium text-foreground mb-2">{webinar.title}</h3>
                  <p className="text-sm text-muted-foreground">{webinar.description}</p>
                </div>
                <div className="ml-4 text-xl">{webinar.icon}</div>
              </div>
              <button 
                className={`w-full px-4 py-2 rounded-lg font-medium transition-colors duration-200 text-white ${buttonContent.color}`}
                data-testid={`webinar-action-${index}`}
              >
                {buttonContent.text}
              </button>
            </div>
          );
        })}
      </div>
    </section>
  );
}
