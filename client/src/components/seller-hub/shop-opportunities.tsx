import { AlertTriangle, TrendingUp, Megaphone, Camera, X, Sparkles } from "lucide-react";
import { useState } from "react";

export default function ShopOpportunities() {
  const [dismissedCards, setDismissedCards] = useState<number[]>([]);

  const opportunities = [
    {
      type: "warning",
      icon: AlertTriangle,
      iconColor: "text-orange-500",
      bgColor: "bg-orange-50 border-orange-200",
      title: "–ú–∏ –ø–æ–º—ñ—Ç–∏–ª–∏, —â–æ –≤–∞—à—ñ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞—Ç—Ä–∏–º—É—é—Ç—å—Å—è",
      description: "–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –∫—É—Ä—Å –ø–æ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –ª–æ–≥—ñ—Å—Ç–∏–∫–∏, —â–æ–± –ø–æ–∫—Ä–∞—â–∏—Ç–∏ —Å–≤—ñ–π —Ä–µ–π—Ç–∏–Ω–≥.",
      action: "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫—É—Ä—Å",
      actionColor: "bg-orange-500 hover:bg-orange-600"
    },
    {
      type: "tip",
      icon: Camera,
      iconColor: "text-blue-500",
      bgColor: "bg-blue-50 border-blue-200",
      title: "–ö–æ–Ω–≤–µ—Ä—Å—ñ—è —Ç–æ–≤–∞—Ä—É \"–°—É–∫–Ω—è –ª—ñ—Ç–Ω—è –±–∞–≤–æ–≤–Ω—è–Ω–∞\" –Ω–∏–∂—á–∞ –∑–∞ —Å–µ—Ä–µ–¥–Ω—é",
      description: "–î—ñ–∑–Ω–∞–π—Ç–µ—Å—è, —è–∫ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ–¥–∞—é—á—ñ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó.",
      action: "–ü–æ–∫—Ä–∞—â–∏—Ç–∏ —Ñ–æ—Ç–æ",
      actionColor: "bg-blue-500 hover:bg-blue-600"
    },
    {
      type: "opportunity",
      icon: Megaphone,
      iconColor: "text-green-500",
      bgColor: "bg-green-50 border-green-200",
      title: "–í–∏ —â–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –†–µ–∫–ª–∞–º—É –Ω–∞ Rozetka",
      description: "–ü—Ä–æ–π–¥—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π —Ç—É—Ç–æ—Ä—ñ–∞–ª —Ç–∞ –∑–∞–ª—É—á—ñ—Ç—å –±—ñ–ª—å—à–µ –ø–æ–∫—É–ø—Ü—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ä–µ–∫–ª–∞–º–∏.",
      action: "–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∫–∞–º–ø–∞–Ω—ñ—é",
      actionColor: "bg-green-500 hover:bg-green-600"
    },
    {
      type: "achievement",
      icon: Sparkles,
      iconColor: "text-purple-500",
      bgColor: "bg-purple-50 border-purple-200",
      title: "üéâ –í—ñ—Ç–∞—î–º–æ! –í–∞—à—ñ –ø—Ä–æ–¥–∞–∂—ñ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó \"–°—É–∫–Ω—ñ\" –∑—Ä–æ—Å–ª–∏ –Ω–∞ 30%",
      description: "–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π –º—ñ—Å—è—Ü—å –≤–∏ –ø–æ–∫–∞–∑–∞–ª–∏ –≤—ñ–¥–º—ñ–Ω–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –î—ñ–∑–Ω–∞–π—Ç–µ—Å—å, —è–∫ –º–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏ —É—Å–ø—ñ—Ö.",
      action: "–ú–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏ —É—Å–ø—ñ—Ö",
      actionColor: "bg-purple-500 hover:bg-purple-600"
    }
  ];

  const handleDismiss = (index: number) => {
    setDismissedCards([...dismissedCards, index]);
  };

  const visibleOpportunities = opportunities.filter((_, index) => !dismissedCards.includes(index));

  return (
    <section>
      <h2 className="text-xl font-semibold text-foreground mb-4">–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –¥–ª—è –≤–∞—à–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω—É</h2>
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
        {visibleOpportunities.map((opportunity, originalIndex) => {
          const IconComponent = opportunity.icon;
          const index = opportunities.indexOf(opportunity);
          return (
            <div 
              key={index}
              className={`${opportunity.bgColor} rounded-lg border p-4 card-hover relative`}
              data-testid={`shop-opportunity-${index}`}
            >
              <button
                onClick={() => handleDismiss(index)}
                className="absolute top-2 right-2 p-1 rounded-full hover:bg-white/50 transition-colors duration-200"
                data-testid={`dismiss-opportunity-${index}`}
              >
                <X className="w-4 h-4 text-muted-foreground" />
              </button>
              <div className="flex items-start space-x-3 pr-6">
                <div className={`p-2 rounded-lg bg-white`}>
                  <IconComponent className={`w-5 h-5 ${opportunity.iconColor}`} />
                </div>
                <div className="flex-1">
                  <h3 className="font-medium text-foreground mb-2">{opportunity.title}</h3>
                  <p className="text-sm text-muted-foreground mb-3">{opportunity.description}</p>
                  <button 
                    className={`${opportunity.actionColor} text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200`}
                    data-testid={`opportunity-action-${index}`}
                  >
                    {opportunity.action}
                  </button>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </section>
  );
}